version: '3.8'

services:
  venture:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: venture_container
    networks:
      - venture-network
    ports:
      - "9999:9999"
    depends_on:
      postgres:
        condition: service_healthy
    restart: on-failure
    environment:
      DB_HOST: localhost
      DB_USER: postgres
      DB_PASSWORD: 123456
      DB_NAME: venture_database

  postgres:
    image: postgres:15
    container_name: venture_postgres
    environment:
      POSTGRES_DB: venture_database
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123456
    networks:
      - venture-network
    ports:
      - "5433:5433"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d venture_database"]
      interval: 10s
      timeout: 5s
      retries: 5

  broker:
    image: apache/kafka:latest
    hostname: broker
    container_name: broker
    ports:
      - '9092:9092'
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT_HOST://localhost:9092,PLAINTEXT://broker:19092'
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@broker:29093'
      KAFKA_LISTENERS: 'CONTROLLER://:29093,PLAINTEXT_HOST://:9092,PLAINTEXT://:19092'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      CLUSTER_ID: '4L6g3nShT-eMCtK--X86sw'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_LOG_DIRS: '/tmp/kraft-combined-logs'
    networks:
      - venture-network

  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - 8080:8080
    environment:
      DYNAMIC_CONFIG_ENABLED: 'true'
    networks:
      - venture-network

  mongodb:
    image: mongo:latest
    ports:
      - "27017:27017"
    networks:
      - venture-network
  
  nginx:
    image: nginx:1.25.4
    container_name: venture_nginx
    hostname: nginx
    restart: always
    ports:
      - "5678:5678"
      - "7777:7777"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - venture-network

  metabase:
    image: metabase/metabase:latest
    container_name: metabase
    ports:
      - "3030:3030"
    restart: always

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"

networks:
  venture-network:
    driver: bridge

volumes:
  postgres_data:
