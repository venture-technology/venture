// Code generated by mockery v2.44.2. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	entity "github.com/venture-technology/venture/internal/entity"
)

// SESIface is an autogenerated mock type for the SESIface type
type SESIface struct {
	mock.Mock
}

// SendEmail provides a mock function with given fields: email
func (_m *SESIface) SendEmail(email *entity.Email) error {
	ret := _m.Called(email)

	if len(ret) == 0 {
		panic("no return value specified for SendEmail")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(*entity.Email) error); ok {
		r0 = rf(email)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewSESIface creates a new instance of SESIface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewSESIface(t interface {
	mock.TestingT
	Cleanup(func())
}) *SESIface {
	mock := &SESIface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
