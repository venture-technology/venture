// Code generated by mockery v2.53.3. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	entity "github.com/venture-technology/venture/internal/entity"
)

// WorkerEmail is an autogenerated mock type for the WorkerEmail type
type WorkerEmail struct {
	mock.Mock
}

// Enqueue provides a mock function with given fields: payload
func (_m *WorkerEmail) Enqueue(payload *entity.Email) error {
	ret := _m.Called(payload)

	if len(ret) == 0 {
		panic("no return value specified for Enqueue")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(*entity.Email) error); ok {
		r0 = rf(payload)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewWorkerEmail creates a new instance of WorkerEmail. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewWorkerEmail(t interface {
	mock.TestingT
	Cleanup(func())
}) *WorkerEmail {
	mock := &WorkerEmail{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
