{
    "swagger": "2.0",
    "info": {
        "description": "Venture Backend Major API",
        "title": "Venture API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {},
        "version": "0.1"
    },
    "host": "localhost:9999",
    "basePath": "/api/v1/",
    "paths": {
        "/contract": {
            "post": {
                "description": "Cria um novo contrato com os dados fornecidos",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Contracts"
                ],
                "summary": "Cria um novo contrato",
                "parameters": [
                    {
                        "description": "Dados do contrato",
                        "name": "contract",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/value.CreateContractRequestParams"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/agreements.ContractRequest"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/contract/driver/{cnh}": {
            "get": {
                "description": "Retorna todos os contratos associados ao CNH do motorista",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Contracts"
                ],
                "summary": "Lista contratos de um motorista",
                "parameters": [
                    {
                        "type": "string",
                        "description": "CNH do motorista",
                        "name": "cnh",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/value.DriverListContracts"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/contract/responsible/{cpf}": {
            "get": {
                "description": "Retorna todos os contratos associados ao CPF do responsável",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Contracts"
                ],
                "summary": "Lista contratos de um responsável",
                "parameters": [
                    {
                        "type": "string",
                        "description": "CPF do responsável",
                        "name": "cpf",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/value.ResponsibleListContracts"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/contract/school/{cnpj}": {
            "get": {
                "description": "Retorna todos os contratos associados ao CNPJ da escola",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Contracts"
                ],
                "summary": "Lista contratos de uma escola",
                "parameters": [
                    {
                        "type": "string",
                        "description": "CNPJ da escola",
                        "name": "cnpj",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/value.SchoolListContracts"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/contract/{id}": {
            "get": {
                "description": "Retorna um contrato pelo seu UUID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Contracts"
                ],
                "summary": "Busca um contrato",
                "parameters": [
                    {
                        "type": "string",
                        "description": "UUID do contrato",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/value.GetContract"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Cancela um contrato pelo UUID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Contracts"
                ],
                "summary": "Cancela um contrato",
                "parameters": [
                    {
                        "type": "string",
                        "description": "UUID do contrato",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "contrato cancelado com sucesso",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/driver": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Drivers"
                ],
                "summary": "Cria um novo motorista",
                "parameters": [
                    {
                        "description": "Dados do motorista",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.Driver"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/value.GetDriver"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/driver/invites/{cnh}": {
            "get": {
                "description": "Retorna todos os convites enviados para o motorista",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Invites"
                ],
                "summary": "Lista convites do motorista",
                "parameters": [
                    {
                        "type": "string",
                        "description": "CNH do motorista",
                        "name": "cnh",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/value.DriverListInvite"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/driver/login": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Drivers"
                ],
                "summary": "Login de motorista",
                "parameters": [
                    {
                        "description": "Credenciais de login (email e senha)",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.Driver"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/driver/{cnh}": {
            "get": {
                "description": "Retorna os dados de um motorista pelo CNH",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Drivers"
                ],
                "summary": "Busca motorista",
                "parameters": [
                    {
                        "type": "string",
                        "description": "CNH do motorista",
                        "name": "cnh",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/value.GetDriver"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "delete": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Drivers"
                ],
                "summary": "Deleta motorista",
                "parameters": [
                    {
                        "type": "string",
                        "description": "CNH do motorista",
                        "name": "cnh",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "patch": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Drivers"
                ],
                "summary": "Atualiza dados do motorista",
                "parameters": [
                    {
                        "type": "string",
                        "description": "CNH do motorista",
                        "name": "cnh",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Campos a serem atualizados",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/invite": {
            "post": {
                "description": "Cria um convite entre escola e motorista",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Invites"
                ],
                "summary": "Envia um convite",
                "parameters": [
                    {
                        "description": "Dados do convite",
                        "name": "invite",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.Invite"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/invite/{id}/accept": {
            "patch": {
                "description": "Aceita um convite existente",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Invites"
                ],
                "summary": "Aceita convite",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID do convite",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/invite/{id}/decline": {
            "delete": {
                "description": "Recusa e deleta um convite existente",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Invites"
                ],
                "summary": "Recusa convite",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID do convite",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/kid/{cpf}": {
            "post": {
                "description": "Cria um novo filho vinculado ao CPF do responsável",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Kids"
                ],
                "summary": "Criar novo filho",
                "parameters": [
                    {
                        "type": "string",
                        "description": "CPF do responsável",
                        "name": "cpf",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Dados do filho",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.Kid"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/value.GetKid"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/kid/{cpf}/{rg}": {
            "delete": {
                "description": "Remove um filho vinculado ao CPF do responsável",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Kids"
                ],
                "summary": "Deletar filho",
                "parameters": [
                    {
                        "type": "string",
                        "description": "CPF do responsável",
                        "name": "cpf",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "RG do filho",
                        "name": "rg",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "patch": {
                "description": "Atualiza os dados de um filho específico",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Kids"
                ],
                "summary": "Atualizar filho",
                "parameters": [
                    {
                        "type": "string",
                        "description": "CPF do responsável",
                        "name": "cpf",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "RG do filho",
                        "name": "rg",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Campos para atualizar",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/kid/{rg}": {
            "get": {
                "description": "Busca um filho pelo RG",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Kids"
                ],
                "summary": "Buscar filho",
                "parameters": [
                    {
                        "type": "string",
                        "description": "RG do filho",
                        "name": "rg",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/value.GetKid"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/kids/{cpf}": {
            "get": {
                "description": "Lista todos os filhos de um responsável",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Kids"
                ],
                "summary": "Listar filhos",
                "parameters": [
                    {
                        "type": "string",
                        "description": "CPF do responsável",
                        "name": "cpf",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/value.ListKid"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/price/{cpf}/{cnpj}": {
            "get": {
                "description": "Retorna os preços estimados com base no responsável e na escola",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Prices"
                ],
                "summary": "Calcula o preço dos motoristas",
                "parameters": [
                    {
                        "type": "string",
                        "description": "CPF do responsável",
                        "name": "cpf",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "CNPJ da escola",
                        "name": "cnpj",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/value.ListDriverToCalcPrice"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/responsible": {
            "post": {
                "description": "Cria um novo responsável com os dados fornecidos",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Responsibles"
                ],
                "summary": "Cria um novo responsável",
                "parameters": [
                    {
                        "description": "Dados do responsável",
                        "name": "responsible",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.Responsible"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/value.GetResponsible"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/responsible/login": {
            "post": {
                "description": "Realiza o login de um responsável com email e senha",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Responsibles"
                ],
                "summary": "Login de responsável",
                "parameters": [
                    {
                        "description": "Credenciais do responsável (email e senha)",
                        "name": "credentials",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.Responsible"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/responsible/{cpf}": {
            "get": {
                "description": "Retorna o responsável buscado pelo seu CPF",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Responsibles"
                ],
                "summary": "Busca responsável",
                "parameters": [
                    {
                        "type": "string",
                        "description": "CPF do responsável",
                        "name": "cpf",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/value.GetResponsible"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "Deleta um responsável pelo CPF",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Responsibles"
                ],
                "summary": "Deleta um responsável",
                "parameters": [
                    {
                        "type": "string",
                        "description": "CPF do responsável",
                        "name": "cpf",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "patch": {
                "description": "Atualiza os dados de um responsável pelo CPF",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Responsibles"
                ],
                "summary": "Atualiza um responsável",
                "parameters": [
                    {
                        "type": "string",
                        "description": "CPF do responsável",
                        "name": "cpf",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Dados a serem atualizados",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/school": {
            "post": {
                "description": "Cria uma nova escola com os dados fornecidos",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Schools"
                ],
                "summary": "Cria uma nova escola",
                "parameters": [
                    {
                        "description": "Dados da escola",
                        "name": "school",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.School"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/value.GetSchool"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/school/invites/{cnpj}": {
            "get": {
                "description": "Retorna todos os convites enviados pela escola",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Invites"
                ],
                "summary": "Lista convites da escola",
                "parameters": [
                    {
                        "type": "string",
                        "description": "CNPJ da escola",
                        "name": "cnpj",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/value.SchoolListInvite"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/school/login": {
            "post": {
                "description": "Realiza o login de uma escola com email e senha",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Schools"
                ],
                "summary": "Login de escola",
                "parameters": [
                    {
                        "description": "Credenciais da escola (email e senha)",
                        "name": "credentials",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.School"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/school/{cnpj}": {
            "get": {
                "description": "Retorna a escola buscada pelo seu documento principal",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Schools"
                ],
                "summary": "Busca escola",
                "parameters": [
                    {
                        "type": "string",
                        "description": "CNPJ da escola",
                        "name": "cnpj",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/value.GetSchool"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "Deleta uma escola pelo CNPJ",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Schools"
                ],
                "summary": "Deleta uma escola",
                "parameters": [
                    {
                        "type": "string",
                        "description": "CNPJ da escola",
                        "name": "cnpj",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "patch": {
                "description": "Atualiza os dados de uma escola pelo CNPJ",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Schools"
                ],
                "summary": "Atualiza uma escola",
                "parameters": [
                    {
                        "type": "string",
                        "description": "CNPJ da escola",
                        "name": "cnpj",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Dados a serem atualizados",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/schools": {
            "get": {
                "description": "Retorna uma lista de todas as escolas cadastradas",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Schools"
                ],
                "summary": "Lista todas as escolas",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/value.GetSchool"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/temporary-contract/driver/{cnh}": {
            "get": {
                "description": "Retorna todos os contratos temporários associados ao CNH do motorista",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Temporary Contracts"
                ],
                "summary": "Busca contratos temporários de um motorista",
                "parameters": [
                    {
                        "type": "string",
                        "description": "CNH do motorista",
                        "name": "cnh",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/value.GetTempContracts"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/temporary-contract/responsible/{cpf}": {
            "get": {
                "description": "Retorna todos os contratos temporários associados ao CPF do responsável",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Temporary Contracts"
                ],
                "summary": "Busca contratos temporários de um responsável",
                "parameters": [
                    {
                        "type": "string",
                        "description": "CPF do responsável",
                        "name": "cpf",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/value.GetTempContracts"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/temporary-contract/{uuid}": {
            "post": {
                "description": "Cancela um contrato temporário pelo UUID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Temporary Contracts"
                ],
                "summary": "Cancela um contrato temporário",
                "parameters": [
                    {
                        "type": "string",
                        "description": "UUID do contrato temporário",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "agreements.ContractRequest": {
            "type": "object",
            "properties": {
                "cc_email_addresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "expires_at": {
                    "type": "integer"
                },
                "field_options": {
                    "type": "object",
                    "properties": {
                        "date_format": {
                            "type": "string"
                        }
                    }
                },
                "file_urls": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "message": {
                    "type": "string"
                },
                "metadata": {
                    "$ref": "#/definitions/agreements.Metadata"
                },
                "signers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/agreements.Signer"
                    }
                },
                "signing_options": {
                    "type": "object",
                    "properties": {
                        "default_type": {
                            "type": "string"
                        },
                        "draw": {
                            "type": "boolean"
                        },
                        "phone": {
                            "type": "boolean"
                        },
                        "type": {
                            "type": "boolean"
                        },
                        "upload": {
                            "type": "boolean"
                        }
                    }
                },
                "subject": {
                    "type": "string"
                },
                "test_mode": {
                    "type": "boolean"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "agreements.Metadata": {
            "type": "object",
            "properties": {
                "custom_id": {
                    "type": "string"
                },
                "keys": {
                    "type": "object",
                    "properties": {
                        "amount_contract": {
                            "type": "number"
                        },
                        "anual_contract_value": {
                            "type": "number"
                        },
                        "date_time": {
                            "type": "string"
                        },
                        "driver_id": {
                            "type": "string"
                        },
                        "driver_name": {
                            "type": "string"
                        },
                        "kid_id": {
                            "type": "string"
                        },
                        "kid_name": {
                            "type": "string"
                        },
                        "responsible_addr": {
                            "type": "string"
                        },
                        "responsible_cpf": {
                            "type": "string"
                        },
                        "responsible_email": {
                            "type": "string"
                        },
                        "responsible_id": {
                            "type": "string"
                        },
                        "responsible_name": {
                            "type": "string"
                        },
                        "responsible_phone": {
                            "type": "string"
                        },
                        "school_addr": {
                            "type": "string"
                        },
                        "school_id": {
                            "type": "string"
                        },
                        "school_name": {
                            "type": "string"
                        },
                        "time": {
                            "type": "string"
                        },
                        "uuid": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "agreements.Signer": {
            "type": "object",
            "properties": {
                "email_address": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "entity.Address": {
            "type": "object",
            "required": [
                "number",
                "street",
                "zip"
            ],
            "properties": {
                "complement": {
                    "type": "string"
                },
                "number": {
                    "type": "string"
                },
                "street": {
                    "type": "string"
                },
                "zip": {
                    "type": "string"
                }
            }
        },
        "entity.Car": {
            "type": "object",
            "required": [
                "capacity",
                "name",
                "year"
            ],
            "properties": {
                "capacity": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "year": {
                    "type": "string"
                }
            }
        },
        "entity.Driver": {
            "type": "object",
            "required": [
                "address",
                "amount",
                "car",
                "cnh",
                "email",
                "municipal_record",
                "name",
                "phone"
            ],
            "properties": {
                "accessibility": {
                    "type": "boolean"
                },
                "address": {
                    "$ref": "#/definitions/entity.Address"
                },
                "amount": {
                    "type": "number"
                },
                "biography": {
                    "type": "string"
                },
                "car": {
                    "$ref": "#/definitions/entity.Car"
                },
                "city": {
                    "type": "string"
                },
                "cnh": {
                    "type": "string"
                },
                "cpf": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "descriptions": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "municipal_record": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "phone": {
                    "type": "string",
                    "example": "+55 11 123456789"
                },
                "pix_key": {
                    "type": "string"
                },
                "profile_image": {
                    "type": "string"
                },
                "qrcode": {
                    "type": "string"
                },
                "schedule": {
                    "type": "string"
                },
                "seats": {
                    "$ref": "#/definitions/entity.Seats"
                },
                "states": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "entity.Invite": {
            "type": "object",
            "properties": {
                "accepted_at": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "driver": {
                    "$ref": "#/definitions/entity.Driver"
                },
                "driver_id": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "school": {
                    "$ref": "#/definitions/entity.School"
                },
                "school_id": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "entity.InvoiceInfo": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "amount_cents": {
                    "type": "integer"
                },
                "date": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "month": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "entity.Kid": {
            "type": "object",
            "required": [
                "name",
                "rg"
            ],
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "profile_image": {
                    "type": "string"
                },
                "responsible": {
                    "description": "Chave estrangeira corretamente configurada",
                    "allOf": [
                        {
                            "$ref": "#/definitions/entity.Responsible"
                        }
                    ]
                },
                "responsible_id": {
                    "description": "responsible_id field exists to not have conflict with the responsible entity",
                    "type": "string"
                },
                "rg": {
                    "type": "string",
                    "example": "559378847"
                },
                "shift": {
                    "type": "string",
                    "enum": [
                        "matutino",
                        "vespertino",
                        "noturno"
                    ]
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "entity.Responsible": {
            "type": "object",
            "required": [
                "address",
                "cpf",
                "email",
                "name",
                "password",
                "phone"
            ],
            "properties": {
                "address": {
                    "$ref": "#/definitions/entity.Address"
                },
                "card_token": {
                    "description": "credit card token on create responsible",
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "cpf": {
                    "description": "sem pontuação",
                    "type": "string",
                    "example": "44000000000"
                },
                "created_at": {
                    "type": "string"
                },
                "customer_id": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "payment_method_id": {
                    "type": "string"
                },
                "phone": {
                    "description": "o telefone deve seguir este mesmo formato",
                    "type": "string",
                    "example": "+55 11 123456789"
                },
                "profile_image": {
                    "type": "string"
                },
                "states": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "entity.School": {
            "type": "object",
            "required": [
                "address",
                "cnpj",
                "email",
                "name",
                "password",
                "phone"
            ],
            "properties": {
                "address": {
                    "$ref": "#/definitions/entity.Address"
                },
                "city": {
                    "type": "string"
                },
                "cnpj": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "phone": {
                    "type": "string",
                    "example": "+55 11 123456789"
                },
                "profile_image": {
                    "type": "string"
                },
                "states": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "entity.Seats": {
            "type": "object",
            "properties": {
                "afternoon": {
                    "type": "integer"
                },
                "morning": {
                    "type": "integer"
                },
                "night": {
                    "type": "integer"
                },
                "remaining": {
                    "type": "integer"
                }
            }
        },
        "value.CreateContractRequestParams": {
            "type": "object",
            "properties": {
                "driver_cnh": {
                    "type": "string"
                },
                "kid_rg": {
                    "type": "string"
                },
                "responsible_cpf": {
                    "type": "string"
                },
                "school_cnpj": {
                    "type": "string"
                }
            }
        },
        "value.DriverListContracts": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "created_at": {
                    "type": "integer"
                },
                "expire_at": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "kid": {
                    "$ref": "#/definitions/value.GetKidContract"
                },
                "record": {
                    "type": "string"
                },
                "responsible": {
                    "$ref": "#/definitions/value.GetParentContract"
                },
                "school": {
                    "$ref": "#/definitions/value.GetSchoolContract"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "value.DriverListInvite": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "profile_image": {
                    "type": "string"
                }
            }
        },
        "value.GetContract": {
            "type": "object",
            "properties": {
                "contract": {
                    "$ref": "#/definitions/value.GetContractOutput"
                },
                "invoices": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/entity.InvoiceInfo"
                    }
                }
            }
        },
        "value.GetContractOutput": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "integer"
                },
                "driver": {
                    "$ref": "#/definitions/value.GetDriverContract"
                },
                "expired_at": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "kid": {
                    "$ref": "#/definitions/value.GetKidContract"
                },
                "responsible": {
                    "$ref": "#/definitions/value.GetParentContract"
                },
                "school": {
                    "$ref": "#/definitions/value.GetSchoolContract"
                },
                "signing_url": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "subscription_id": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "value.GetDriver": {
            "type": "object",
            "properties": {
                "accessibility": {
                    "type": "boolean"
                },
                "amount": {
                    "type": "number"
                },
                "biography": {
                    "type": "string"
                },
                "car": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "descriptions": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "gallery": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "profile_image": {
                    "type": "string"
                },
                "qrcode": {
                    "type": "string"
                },
                "states": {
                    "type": "string"
                }
            }
        },
        "value.GetDriverContract": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "profile_image": {
                    "type": "string"
                }
            }
        },
        "value.GetKid": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "period": {
                    "type": "string"
                },
                "profile_image": {
                    "type": "string"
                },
                "responsible_name": {
                    "type": "string"
                },
                "rg": {
                    "type": "string"
                }
            }
        },
        "value.GetKidContract": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "period": {
                    "type": "string"
                },
                "profile_image": {
                    "type": "string"
                }
            }
        },
        "value.GetParentContract": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "profile_image": {
                    "type": "string"
                }
            }
        },
        "value.GetResponsible": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "customer_id": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "payment_method_id": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "profile_image": {
                    "type": "string"
                },
                "states": {
                    "type": "string"
                }
            }
        },
        "value.GetSchool": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "profile_image": {
                    "type": "string"
                },
                "states": {
                    "type": "string"
                }
            }
        },
        "value.GetSchoolContract": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "profile_image": {
                    "type": "string"
                }
            }
        },
        "value.GetTempContracts": {
            "type": "object",
            "properties": {
                "created_at": {
                    "description": "epoch time",
                    "type": "integer"
                },
                "driver_assigned_at": {
                    "description": "epoch time",
                    "type": "integer"
                },
                "driver_cnh": {
                    "type": "string"
                },
                "expires_at": {
                    "description": "epoch time",
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "kid_rg": {
                    "type": "string"
                },
                "responsible_cpf": {
                    "type": "string"
                },
                "responsibles_assigned_at": {
                    "description": "epoch time",
                    "type": "integer"
                },
                "school_cnpj": {
                    "type": "string"
                },
                "signature_request_id": {
                    "type": "string"
                },
                "signing_url": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "value.ListDriverToCalcPrice": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "price_total": {
                    "description": "this field is used to calculate the total price of the driver getting distance from responsible and school",
                    "type": "number"
                },
                "profile_image": {
                    "type": "string"
                }
            }
        },
        "value.ListKid": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "period": {
                    "type": "string"
                },
                "profile_image": {
                    "type": "string"
                }
            }
        },
        "value.ResponsibleListContracts": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "created_at": {
                    "type": "integer"
                },
                "driver": {
                    "$ref": "#/definitions/value.GetDriverContract"
                },
                "expire_at": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "kid_name": {
                    "type": "string"
                },
                "period": {
                    "type": "string"
                },
                "record": {
                    "type": "string"
                },
                "school": {
                    "$ref": "#/definitions/value.GetSchoolContract"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "value.SchoolListContracts": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "created_at": {
                    "type": "integer"
                },
                "driver": {
                    "$ref": "#/definitions/value.GetDriverContract"
                },
                "expire_at": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "kid_name": {
                    "type": "string"
                },
                "period": {
                    "type": "string"
                },
                "record": {
                    "type": "string"
                },
                "responsible": {
                    "$ref": "#/definitions/value.GetParentContract"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "value.SchoolListInvite": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "profile_image": {
                    "type": "string"
                }
            }
        }
    }
}